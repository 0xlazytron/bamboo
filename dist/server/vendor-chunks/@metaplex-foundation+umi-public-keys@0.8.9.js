"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@metaplex-foundation+umi-public-keys@0.8.9";
exports.ids = ["vendor-chunks/@metaplex-foundation+umi-public-keys@0.8.9"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/common.cjs":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/common.cjs ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar umiSerializersEncodings = __webpack_require__(/*! @metaplex-foundation/umi-serializers-encodings */ \"(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-serializers-encodings@0.8.9/node_modules/@metaplex-foundation/umi-serializers-encodings/dist/cjs/index.cjs\");\nvar errors = __webpack_require__(/*! ./errors.cjs */ \"(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/errors.cjs\");\n\n/**\n * The amount of bytes in a public key.\n * @category Signers and PublicKeys\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Defines a public key as a base58 string.\n * @category Signers and PublicKeys\n */\n\nfunction publicKey(input, assertValidPublicKey = true) {\n  const key = (() => {\n    if (typeof input === 'string') {\n      return input;\n    }\n    // HasPublicKey.\n    if (typeof input === 'object' && 'publicKey' in input) {\n      return input.publicKey;\n    }\n    // LegacyWeb3JsPublicKey.\n    if (typeof input === 'object' && 'toBase58' in input) {\n      return input.toBase58();\n    }\n    // Pda.\n    if (Array.isArray(input)) {\n      return input[0];\n    }\n    // PublicKeyBytes.\n    return umiSerializersEncodings.base58.deserialize(input)[0];\n  })();\n  if (assertValidPublicKey) {\n    assertPublicKey(key);\n  }\n  return key;\n}\n\n/**\n * Creates the default public key which is composed of all zero bytes.\n * @category Signers and PublicKeys\n */\nconst defaultPublicKey = () => '11111111111111111111111111111111';\n\n/**\n * Whether the given value is a valid public key.\n * @category Signers and PublicKeys\n */\nconst isPublicKey = value => {\n  try {\n    assertPublicKey(value);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\n/**\n * Whether the given value is a valid program-derived address.\n * @category Signers and PublicKeys\n */\nconst isPda = value => Array.isArray(value) && value.length === 2 && typeof value[1] === 'number' && isPublicKey(value[0]);\n\n/**\n * Ensures the given value is a valid public key.\n * @category Signers and PublicKeys\n */\nfunction assertPublicKey(value) {\n  // Check value type.\n  if (typeof value !== 'string') {\n    throw new errors.InvalidPublicKeyError(value, 'Public keys must be strings.');\n  }\n\n  // Check base58 encoding and byte length.\n  publicKeyBytes(value);\n}\n\n/**\n * Deduplicates the given array of public keys.\n * @category Signers and PublicKeys\n */\nconst uniquePublicKeys = publicKeys => [...new Set(publicKeys)];\n\n/**\n * Converts the given public key to a Uint8Array.\n * Throws an error if the public key is an invalid base58 string.\n * @category Signers and PublicKeys\n */\nconst publicKeyBytes = value => {\n  // Check string length to avoid unnecessary base58 encoding.\n  if (value.length < 32 || value.length > 44) {\n    throw new errors.InvalidPublicKeyError(value, 'Public keys must be between 32 and 44 characters.');\n  }\n\n  // Check base58 encoding.\n  let bytes;\n  try {\n    bytes = umiSerializersEncodings.base58.serialize(value);\n  } catch (error) {\n    throw new errors.InvalidPublicKeyError(value, 'Public keys must be base58 encoded.');\n  }\n\n  // Check byte length.\n  if (bytes.length !== PUBLIC_KEY_LENGTH) {\n    throw new errors.InvalidPublicKeyError(value, `Public keys must be ${PUBLIC_KEY_LENGTH} bytes.`);\n  }\n  return bytes;\n};\n\n/**\n * Converts the given public key to a base58 string.\n * @category Signers and PublicKeys\n * @deprecated Public keys are now represented directly as base58 strings.\n */\nconst base58PublicKey = key => publicKey(key);\n\n/**\n * Whether the given public keys are the same.\n * @category Signers and PublicKeys\n * @deprecated Use `left === right` instead now that public keys are base58 strings.\n */\nconst samePublicKey = (left, right) => publicKey(left) === publicKey(right);\n\nexports.PUBLIC_KEY_LENGTH = PUBLIC_KEY_LENGTH;\nexports.assertPublicKey = assertPublicKey;\nexports.base58PublicKey = base58PublicKey;\nexports.defaultPublicKey = defaultPublicKey;\nexports.isPda = isPda;\nexports.isPublicKey = isPublicKey;\nexports.publicKey = publicKey;\nexports.publicKeyBytes = publicKeyBytes;\nexports.samePublicKey = samePublicKey;\nexports.uniquePublicKeys = uniquePublicKeys;\n//# sourceMappingURL=common.cjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG1ldGFwbGV4LWZvdW5kYXRpb24rdW1pLXB1YmxpYy1rZXlzQDAuOC45L25vZGVfbW9kdWxlcy9AbWV0YXBsZXgtZm91bmRhdGlvbi91bWktcHVibGljLWtleXMvZGlzdC9janMvY29tbW9uLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELDhCQUE4QixtQkFBTyxDQUFDLHNOQUFnRDtBQUN0RixhQUFhLG1CQUFPLENBQUMsaUtBQWM7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHlFQUF5RSxtQkFBbUI7QUFDNUY7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEseUJBQXlCO0FBQ3pCLHVCQUF1QjtBQUN2Qix1QkFBdUI7QUFDdkIsd0JBQXdCO0FBQ3hCLGFBQWE7QUFDYixtQkFBbUI7QUFDbkIsaUJBQWlCO0FBQ2pCLHNCQUFzQjtBQUN0QixxQkFBcUI7QUFDckIsd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEhwXFxPbmVEcml2ZVxcRGVza3RvcFxcQnJva2llcy1taW50LXBhZ2UtbWFpblxcYmFtYm9vXFxub2RlX21vZHVsZXNcXC5wbnBtXFxAbWV0YXBsZXgtZm91bmRhdGlvbit1bWktcHVibGljLWtleXNAMC44LjlcXG5vZGVfbW9kdWxlc1xcQG1ldGFwbGV4LWZvdW5kYXRpb25cXHVtaS1wdWJsaWMta2V5c1xcZGlzdFxcY2pzXFxjb21tb24uY2pzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxudmFyIHVtaVNlcmlhbGl6ZXJzRW5jb2RpbmdzID0gcmVxdWlyZSgnQG1ldGFwbGV4LWZvdW5kYXRpb24vdW1pLXNlcmlhbGl6ZXJzLWVuY29kaW5ncycpO1xudmFyIGVycm9ycyA9IHJlcXVpcmUoJy4vZXJyb3JzLmNqcycpO1xuXG4vKipcbiAqIFRoZSBhbW91bnQgb2YgYnl0ZXMgaW4gYSBwdWJsaWMga2V5LlxuICogQGNhdGVnb3J5IFNpZ25lcnMgYW5kIFB1YmxpY0tleXNcbiAqL1xuY29uc3QgUFVCTElDX0tFWV9MRU5HVEggPSAzMjtcblxuLyoqXG4gKiBEZWZpbmVzIGEgcHVibGljIGtleSBhcyBhIGJhc2U1OCBzdHJpbmcuXG4gKiBAY2F0ZWdvcnkgU2lnbmVycyBhbmQgUHVibGljS2V5c1xuICovXG5cbmZ1bmN0aW9uIHB1YmxpY0tleShpbnB1dCwgYXNzZXJ0VmFsaWRQdWJsaWNLZXkgPSB0cnVlKSB7XG4gIGNvbnN0IGtleSA9ICgoKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJldHVybiBpbnB1dDtcbiAgICB9XG4gICAgLy8gSGFzUHVibGljS2V5LlxuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdvYmplY3QnICYmICdwdWJsaWNLZXknIGluIGlucHV0KSB7XG4gICAgICByZXR1cm4gaW5wdXQucHVibGljS2V5O1xuICAgIH1cbiAgICAvLyBMZWdhY3lXZWIzSnNQdWJsaWNLZXkuXG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ29iamVjdCcgJiYgJ3RvQmFzZTU4JyBpbiBpbnB1dCkge1xuICAgICAgcmV0dXJuIGlucHV0LnRvQmFzZTU4KCk7XG4gICAgfVxuICAgIC8vIFBkYS5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcbiAgICAgIHJldHVybiBpbnB1dFswXTtcbiAgICB9XG4gICAgLy8gUHVibGljS2V5Qnl0ZXMuXG4gICAgcmV0dXJuIHVtaVNlcmlhbGl6ZXJzRW5jb2RpbmdzLmJhc2U1OC5kZXNlcmlhbGl6ZShpbnB1dClbMF07XG4gIH0pKCk7XG4gIGlmIChhc3NlcnRWYWxpZFB1YmxpY0tleSkge1xuICAgIGFzc2VydFB1YmxpY0tleShrZXkpO1xuICB9XG4gIHJldHVybiBrZXk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyB0aGUgZGVmYXVsdCBwdWJsaWMga2V5IHdoaWNoIGlzIGNvbXBvc2VkIG9mIGFsbCB6ZXJvIGJ5dGVzLlxuICogQGNhdGVnb3J5IFNpZ25lcnMgYW5kIFB1YmxpY0tleXNcbiAqL1xuY29uc3QgZGVmYXVsdFB1YmxpY0tleSA9ICgpID0+ICcxMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMSc7XG5cbi8qKlxuICogV2hldGhlciB0aGUgZ2l2ZW4gdmFsdWUgaXMgYSB2YWxpZCBwdWJsaWMga2V5LlxuICogQGNhdGVnb3J5IFNpZ25lcnMgYW5kIFB1YmxpY0tleXNcbiAqL1xuY29uc3QgaXNQdWJsaWNLZXkgPSB2YWx1ZSA9PiB7XG4gIHRyeSB7XG4gICAgYXNzZXJ0UHVibGljS2V5KHZhbHVlKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbi8qKlxuICogV2hldGhlciB0aGUgZ2l2ZW4gdmFsdWUgaXMgYSB2YWxpZCBwcm9ncmFtLWRlcml2ZWQgYWRkcmVzcy5cbiAqIEBjYXRlZ29yeSBTaWduZXJzIGFuZCBQdWJsaWNLZXlzXG4gKi9cbmNvbnN0IGlzUGRhID0gdmFsdWUgPT4gQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdmFsdWUubGVuZ3RoID09PSAyICYmIHR5cGVvZiB2YWx1ZVsxXSA9PT0gJ251bWJlcicgJiYgaXNQdWJsaWNLZXkodmFsdWVbMF0pO1xuXG4vKipcbiAqIEVuc3VyZXMgdGhlIGdpdmVuIHZhbHVlIGlzIGEgdmFsaWQgcHVibGljIGtleS5cbiAqIEBjYXRlZ29yeSBTaWduZXJzIGFuZCBQdWJsaWNLZXlzXG4gKi9cbmZ1bmN0aW9uIGFzc2VydFB1YmxpY0tleSh2YWx1ZSkge1xuICAvLyBDaGVjayB2YWx1ZSB0eXBlLlxuICBpZiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBlcnJvcnMuSW52YWxpZFB1YmxpY0tleUVycm9yKHZhbHVlLCAnUHVibGljIGtleXMgbXVzdCBiZSBzdHJpbmdzLicpO1xuICB9XG5cbiAgLy8gQ2hlY2sgYmFzZTU4IGVuY29kaW5nIGFuZCBieXRlIGxlbmd0aC5cbiAgcHVibGljS2V5Qnl0ZXModmFsdWUpO1xufVxuXG4vKipcbiAqIERlZHVwbGljYXRlcyB0aGUgZ2l2ZW4gYXJyYXkgb2YgcHVibGljIGtleXMuXG4gKiBAY2F0ZWdvcnkgU2lnbmVycyBhbmQgUHVibGljS2V5c1xuICovXG5jb25zdCB1bmlxdWVQdWJsaWNLZXlzID0gcHVibGljS2V5cyA9PiBbLi4ubmV3IFNldChwdWJsaWNLZXlzKV07XG5cbi8qKlxuICogQ29udmVydHMgdGhlIGdpdmVuIHB1YmxpYyBrZXkgdG8gYSBVaW50OEFycmF5LlxuICogVGhyb3dzIGFuIGVycm9yIGlmIHRoZSBwdWJsaWMga2V5IGlzIGFuIGludmFsaWQgYmFzZTU4IHN0cmluZy5cbiAqIEBjYXRlZ29yeSBTaWduZXJzIGFuZCBQdWJsaWNLZXlzXG4gKi9cbmNvbnN0IHB1YmxpY0tleUJ5dGVzID0gdmFsdWUgPT4ge1xuICAvLyBDaGVjayBzdHJpbmcgbGVuZ3RoIHRvIGF2b2lkIHVubmVjZXNzYXJ5IGJhc2U1OCBlbmNvZGluZy5cbiAgaWYgKHZhbHVlLmxlbmd0aCA8IDMyIHx8IHZhbHVlLmxlbmd0aCA+IDQ0KSB7XG4gICAgdGhyb3cgbmV3IGVycm9ycy5JbnZhbGlkUHVibGljS2V5RXJyb3IodmFsdWUsICdQdWJsaWMga2V5cyBtdXN0IGJlIGJldHdlZW4gMzIgYW5kIDQ0IGNoYXJhY3RlcnMuJyk7XG4gIH1cblxuICAvLyBDaGVjayBiYXNlNTggZW5jb2RpbmcuXG4gIGxldCBieXRlcztcbiAgdHJ5IHtcbiAgICBieXRlcyA9IHVtaVNlcmlhbGl6ZXJzRW5jb2RpbmdzLmJhc2U1OC5zZXJpYWxpemUodmFsdWUpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRocm93IG5ldyBlcnJvcnMuSW52YWxpZFB1YmxpY0tleUVycm9yKHZhbHVlLCAnUHVibGljIGtleXMgbXVzdCBiZSBiYXNlNTggZW5jb2RlZC4nKTtcbiAgfVxuXG4gIC8vIENoZWNrIGJ5dGUgbGVuZ3RoLlxuICBpZiAoYnl0ZXMubGVuZ3RoICE9PSBQVUJMSUNfS0VZX0xFTkdUSCkge1xuICAgIHRocm93IG5ldyBlcnJvcnMuSW52YWxpZFB1YmxpY0tleUVycm9yKHZhbHVlLCBgUHVibGljIGtleXMgbXVzdCBiZSAke1BVQkxJQ19LRVlfTEVOR1RIfSBieXRlcy5gKTtcbiAgfVxuICByZXR1cm4gYnl0ZXM7XG59O1xuXG4vKipcbiAqIENvbnZlcnRzIHRoZSBnaXZlbiBwdWJsaWMga2V5IHRvIGEgYmFzZTU4IHN0cmluZy5cbiAqIEBjYXRlZ29yeSBTaWduZXJzIGFuZCBQdWJsaWNLZXlzXG4gKiBAZGVwcmVjYXRlZCBQdWJsaWMga2V5cyBhcmUgbm93IHJlcHJlc2VudGVkIGRpcmVjdGx5IGFzIGJhc2U1OCBzdHJpbmdzLlxuICovXG5jb25zdCBiYXNlNThQdWJsaWNLZXkgPSBrZXkgPT4gcHVibGljS2V5KGtleSk7XG5cbi8qKlxuICogV2hldGhlciB0aGUgZ2l2ZW4gcHVibGljIGtleXMgYXJlIHRoZSBzYW1lLlxuICogQGNhdGVnb3J5IFNpZ25lcnMgYW5kIFB1YmxpY0tleXNcbiAqIEBkZXByZWNhdGVkIFVzZSBgbGVmdCA9PT0gcmlnaHRgIGluc3RlYWQgbm93IHRoYXQgcHVibGljIGtleXMgYXJlIGJhc2U1OCBzdHJpbmdzLlxuICovXG5jb25zdCBzYW1lUHVibGljS2V5ID0gKGxlZnQsIHJpZ2h0KSA9PiBwdWJsaWNLZXkobGVmdCkgPT09IHB1YmxpY0tleShyaWdodCk7XG5cbmV4cG9ydHMuUFVCTElDX0tFWV9MRU5HVEggPSBQVUJMSUNfS0VZX0xFTkdUSDtcbmV4cG9ydHMuYXNzZXJ0UHVibGljS2V5ID0gYXNzZXJ0UHVibGljS2V5O1xuZXhwb3J0cy5iYXNlNThQdWJsaWNLZXkgPSBiYXNlNThQdWJsaWNLZXk7XG5leHBvcnRzLmRlZmF1bHRQdWJsaWNLZXkgPSBkZWZhdWx0UHVibGljS2V5O1xuZXhwb3J0cy5pc1BkYSA9IGlzUGRhO1xuZXhwb3J0cy5pc1B1YmxpY0tleSA9IGlzUHVibGljS2V5O1xuZXhwb3J0cy5wdWJsaWNLZXkgPSBwdWJsaWNLZXk7XG5leHBvcnRzLnB1YmxpY0tleUJ5dGVzID0gcHVibGljS2V5Qnl0ZXM7XG5leHBvcnRzLnNhbWVQdWJsaWNLZXkgPSBzYW1lUHVibGljS2V5O1xuZXhwb3J0cy51bmlxdWVQdWJsaWNLZXlzID0gdW5pcXVlUHVibGljS2V5cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbW1vbi5janMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/common.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/errors.cjs":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/errors.cjs ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/** @category Errors */\nclass InvalidPublicKeyError extends Error {\n  name = 'InvalidPublicKeyError';\n  constructor(invalidPublicKey, reason) {\n    reason = reason ? `. ${reason}` : '';\n    super(`The provided public key is invalid: ${invalidPublicKey}${reason}`);\n    this.invalidPublicKey = invalidPublicKey;\n  }\n}\n\nexports.InvalidPublicKeyError = InvalidPublicKeyError;\n//# sourceMappingURL=errors.cjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG1ldGFwbGV4LWZvdW5kYXRpb24rdW1pLXB1YmxpYy1rZXlzQDAuOC45L25vZGVfbW9kdWxlcy9AbWV0YXBsZXgtZm91bmRhdGlvbi91bWktcHVibGljLWtleXMvZGlzdC9janMvZXJyb3JzLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLE9BQU87QUFDbEMsaURBQWlELGlCQUFpQixFQUFFLE9BQU87QUFDM0U7QUFDQTtBQUNBOztBQUVBLDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxIcFxcT25lRHJpdmVcXERlc2t0b3BcXEJyb2tpZXMtbWludC1wYWdlLW1haW5cXGJhbWJvb1xcbm9kZV9tb2R1bGVzXFwucG5wbVxcQG1ldGFwbGV4LWZvdW5kYXRpb24rdW1pLXB1YmxpYy1rZXlzQDAuOC45XFxub2RlX21vZHVsZXNcXEBtZXRhcGxleC1mb3VuZGF0aW9uXFx1bWktcHVibGljLWtleXNcXGRpc3RcXGNqc1xcZXJyb3JzLmNqcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qKiBAY2F0ZWdvcnkgRXJyb3JzICovXG5jbGFzcyBJbnZhbGlkUHVibGljS2V5RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIG5hbWUgPSAnSW52YWxpZFB1YmxpY0tleUVycm9yJztcbiAgY29uc3RydWN0b3IoaW52YWxpZFB1YmxpY0tleSwgcmVhc29uKSB7XG4gICAgcmVhc29uID0gcmVhc29uID8gYC4gJHtyZWFzb259YCA6ICcnO1xuICAgIHN1cGVyKGBUaGUgcHJvdmlkZWQgcHVibGljIGtleSBpcyBpbnZhbGlkOiAke2ludmFsaWRQdWJsaWNLZXl9JHtyZWFzb259YCk7XG4gICAgdGhpcy5pbnZhbGlkUHVibGljS2V5ID0gaW52YWxpZFB1YmxpY0tleTtcbiAgfVxufVxuXG5leHBvcnRzLkludmFsaWRQdWJsaWNLZXlFcnJvciA9IEludmFsaWRQdWJsaWNLZXlFcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5janMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/errors.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/index.cjs":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/index.cjs ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar common = __webpack_require__(/*! ./common.cjs */ \"(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/common.cjs\");\nvar errors = __webpack_require__(/*! ./errors.cjs */ \"(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/errors.cjs\");\n\n\n\nexports.PUBLIC_KEY_LENGTH = common.PUBLIC_KEY_LENGTH;\nexports.assertPublicKey = common.assertPublicKey;\nexports.base58PublicKey = common.base58PublicKey;\nexports.defaultPublicKey = common.defaultPublicKey;\nexports.isPda = common.isPda;\nexports.isPublicKey = common.isPublicKey;\nexports.publicKey = common.publicKey;\nexports.publicKeyBytes = common.publicKeyBytes;\nexports.samePublicKey = common.samePublicKey;\nexports.uniquePublicKeys = common.uniquePublicKeys;\nexports.InvalidPublicKeyError = errors.InvalidPublicKeyError;\n//# sourceMappingURL=index.cjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG1ldGFwbGV4LWZvdW5kYXRpb24rdW1pLXB1YmxpYy1rZXlzQDAuOC45L25vZGVfbW9kdWxlcy9AbWV0YXBsZXgtZm91bmRhdGlvbi91bWktcHVibGljLWtleXMvZGlzdC9janMvaW5kZXguY2pzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsYUFBYSxtQkFBTyxDQUFDLGlLQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQyxpS0FBYzs7OztBQUluQyx5QkFBeUI7QUFDekIsdUJBQXVCO0FBQ3ZCLHVCQUF1QjtBQUN2Qix3QkFBd0I7QUFDeEIsYUFBYTtBQUNiLG1CQUFtQjtBQUNuQixpQkFBaUI7QUFDakIsc0JBQXNCO0FBQ3RCLHFCQUFxQjtBQUNyQix3QkFBd0I7QUFDeEIsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEhwXFxPbmVEcml2ZVxcRGVza3RvcFxcQnJva2llcy1taW50LXBhZ2UtbWFpblxcYmFtYm9vXFxub2RlX21vZHVsZXNcXC5wbnBtXFxAbWV0YXBsZXgtZm91bmRhdGlvbit1bWktcHVibGljLWtleXNAMC44LjlcXG5vZGVfbW9kdWxlc1xcQG1ldGFwbGV4LWZvdW5kYXRpb25cXHVtaS1wdWJsaWMta2V5c1xcZGlzdFxcY2pzXFxpbmRleC5janMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG52YXIgY29tbW9uID0gcmVxdWlyZSgnLi9jb21tb24uY2pzJyk7XG52YXIgZXJyb3JzID0gcmVxdWlyZSgnLi9lcnJvcnMuY2pzJyk7XG5cblxuXG5leHBvcnRzLlBVQkxJQ19LRVlfTEVOR1RIID0gY29tbW9uLlBVQkxJQ19LRVlfTEVOR1RIO1xuZXhwb3J0cy5hc3NlcnRQdWJsaWNLZXkgPSBjb21tb24uYXNzZXJ0UHVibGljS2V5O1xuZXhwb3J0cy5iYXNlNThQdWJsaWNLZXkgPSBjb21tb24uYmFzZTU4UHVibGljS2V5O1xuZXhwb3J0cy5kZWZhdWx0UHVibGljS2V5ID0gY29tbW9uLmRlZmF1bHRQdWJsaWNLZXk7XG5leHBvcnRzLmlzUGRhID0gY29tbW9uLmlzUGRhO1xuZXhwb3J0cy5pc1B1YmxpY0tleSA9IGNvbW1vbi5pc1B1YmxpY0tleTtcbmV4cG9ydHMucHVibGljS2V5ID0gY29tbW9uLnB1YmxpY0tleTtcbmV4cG9ydHMucHVibGljS2V5Qnl0ZXMgPSBjb21tb24ucHVibGljS2V5Qnl0ZXM7XG5leHBvcnRzLnNhbWVQdWJsaWNLZXkgPSBjb21tb24uc2FtZVB1YmxpY0tleTtcbmV4cG9ydHMudW5pcXVlUHVibGljS2V5cyA9IGNvbW1vbi51bmlxdWVQdWJsaWNLZXlzO1xuZXhwb3J0cy5JbnZhbGlkUHVibGljS2V5RXJyb3IgPSBlcnJvcnMuSW52YWxpZFB1YmxpY0tleUVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguY2pzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/esm/common.mjs":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/esm/common.mjs ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PUBLIC_KEY_LENGTH: () => (/* binding */ PUBLIC_KEY_LENGTH),\n/* harmony export */   assertPublicKey: () => (/* binding */ assertPublicKey),\n/* harmony export */   base58PublicKey: () => (/* binding */ base58PublicKey),\n/* harmony export */   defaultPublicKey: () => (/* binding */ defaultPublicKey),\n/* harmony export */   isPda: () => (/* binding */ isPda),\n/* harmony export */   isPublicKey: () => (/* binding */ isPublicKey),\n/* harmony export */   publicKey: () => (/* binding */ publicKey),\n/* harmony export */   publicKeyBytes: () => (/* binding */ publicKeyBytes),\n/* harmony export */   samePublicKey: () => (/* binding */ samePublicKey),\n/* harmony export */   uniquePublicKeys: () => (/* binding */ uniquePublicKeys)\n/* harmony export */ });\n/* harmony import */ var _metaplex_foundation_umi_serializers_encodings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @metaplex-foundation/umi-serializers-encodings */ \"(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-serializers-encodings@0.8.9/node_modules/@metaplex-foundation/umi-serializers-encodings/dist/esm/base58.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/esm/errors.mjs\");\n\n\n\n/**\n * The amount of bytes in a public key.\n * @category Signers and PublicKeys\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Defines a public key as a base58 string.\n * @category Signers and PublicKeys\n */\n\nfunction publicKey(input, assertValidPublicKey = true) {\n  const key = (() => {\n    if (typeof input === 'string') {\n      return input;\n    }\n    // HasPublicKey.\n    if (typeof input === 'object' && 'publicKey' in input) {\n      return input.publicKey;\n    }\n    // LegacyWeb3JsPublicKey.\n    if (typeof input === 'object' && 'toBase58' in input) {\n      return input.toBase58();\n    }\n    // Pda.\n    if (Array.isArray(input)) {\n      return input[0];\n    }\n    // PublicKeyBytes.\n    return _metaplex_foundation_umi_serializers_encodings__WEBPACK_IMPORTED_MODULE_0__.base58.deserialize(input)[0];\n  })();\n  if (assertValidPublicKey) {\n    assertPublicKey(key);\n  }\n  return key;\n}\n\n/**\n * Creates the default public key which is composed of all zero bytes.\n * @category Signers and PublicKeys\n */\nconst defaultPublicKey = () => '11111111111111111111111111111111';\n\n/**\n * Whether the given value is a valid public key.\n * @category Signers and PublicKeys\n */\nconst isPublicKey = value => {\n  try {\n    assertPublicKey(value);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\n/**\n * Whether the given value is a valid program-derived address.\n * @category Signers and PublicKeys\n */\nconst isPda = value => Array.isArray(value) && value.length === 2 && typeof value[1] === 'number' && isPublicKey(value[0]);\n\n/**\n * Ensures the given value is a valid public key.\n * @category Signers and PublicKeys\n */\nfunction assertPublicKey(value) {\n  // Check value type.\n  if (typeof value !== 'string') {\n    throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_1__.InvalidPublicKeyError(value, 'Public keys must be strings.');\n  }\n\n  // Check base58 encoding and byte length.\n  publicKeyBytes(value);\n}\n\n/**\n * Deduplicates the given array of public keys.\n * @category Signers and PublicKeys\n */\nconst uniquePublicKeys = publicKeys => [...new Set(publicKeys)];\n\n/**\n * Converts the given public key to a Uint8Array.\n * Throws an error if the public key is an invalid base58 string.\n * @category Signers and PublicKeys\n */\nconst publicKeyBytes = value => {\n  // Check string length to avoid unnecessary base58 encoding.\n  if (value.length < 32 || value.length > 44) {\n    throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_1__.InvalidPublicKeyError(value, 'Public keys must be between 32 and 44 characters.');\n  }\n\n  // Check base58 encoding.\n  let bytes;\n  try {\n    bytes = _metaplex_foundation_umi_serializers_encodings__WEBPACK_IMPORTED_MODULE_0__.base58.serialize(value);\n  } catch (error) {\n    throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_1__.InvalidPublicKeyError(value, 'Public keys must be base58 encoded.');\n  }\n\n  // Check byte length.\n  if (bytes.length !== PUBLIC_KEY_LENGTH) {\n    throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_1__.InvalidPublicKeyError(value, `Public keys must be ${PUBLIC_KEY_LENGTH} bytes.`);\n  }\n  return bytes;\n};\n\n/**\n * Converts the given public key to a base58 string.\n * @category Signers and PublicKeys\n * @deprecated Public keys are now represented directly as base58 strings.\n */\nconst base58PublicKey = key => publicKey(key);\n\n/**\n * Whether the given public keys are the same.\n * @category Signers and PublicKeys\n * @deprecated Use `left === right` instead now that public keys are base58 strings.\n */\nconst samePublicKey = (left, right) => publicKey(left) === publicKey(right);\n\n\n//# sourceMappingURL=common.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG1ldGFwbGV4LWZvdW5kYXRpb24rdW1pLXB1YmxpYy1rZXlzQDAuOC45L25vZGVfbW9kdWxlcy9AbWV0YXBsZXgtZm91bmRhdGlvbi91bWktcHVibGljLWtleXMvZGlzdC9lc20vY29tbW9uLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBd0U7QUFDbkI7O0FBRXJEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrRkFBTTtBQUNqQixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDhEQUFxQjtBQUNuQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyw4REFBcUI7QUFDbkM7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWSxrRkFBTTtBQUNsQixJQUFJO0FBQ0osY0FBYyw4REFBcUI7QUFDbkM7O0FBRUE7QUFDQTtBQUNBLGNBQWMsOERBQXFCLCtCQUErQixtQkFBbUI7QUFDckY7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlLO0FBQ2pLIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEhwXFxPbmVEcml2ZVxcRGVza3RvcFxcQnJva2llcy1taW50LXBhZ2UtbWFpblxcYmFtYm9vXFxub2RlX21vZHVsZXNcXC5wbnBtXFxAbWV0YXBsZXgtZm91bmRhdGlvbit1bWktcHVibGljLWtleXNAMC44LjlcXG5vZGVfbW9kdWxlc1xcQG1ldGFwbGV4LWZvdW5kYXRpb25cXHVtaS1wdWJsaWMta2V5c1xcZGlzdFxcZXNtXFxjb21tb24ubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2U1OCB9IGZyb20gJ0BtZXRhcGxleC1mb3VuZGF0aW9uL3VtaS1zZXJpYWxpemVycy1lbmNvZGluZ3MnO1xuaW1wb3J0IHsgSW52YWxpZFB1YmxpY0tleUVycm9yIH0gZnJvbSAnLi9lcnJvcnMubWpzJztcblxuLyoqXG4gKiBUaGUgYW1vdW50IG9mIGJ5dGVzIGluIGEgcHVibGljIGtleS5cbiAqIEBjYXRlZ29yeSBTaWduZXJzIGFuZCBQdWJsaWNLZXlzXG4gKi9cbmNvbnN0IFBVQkxJQ19LRVlfTEVOR1RIID0gMzI7XG5cbi8qKlxuICogRGVmaW5lcyBhIHB1YmxpYyBrZXkgYXMgYSBiYXNlNTggc3RyaW5nLlxuICogQGNhdGVnb3J5IFNpZ25lcnMgYW5kIFB1YmxpY0tleXNcbiAqL1xuXG5mdW5jdGlvbiBwdWJsaWNLZXkoaW5wdXQsIGFzc2VydFZhbGlkUHVibGljS2V5ID0gdHJ1ZSkge1xuICBjb25zdCBrZXkgPSAoKCkgPT4ge1xuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICByZXR1cm4gaW5wdXQ7XG4gICAgfVxuICAgIC8vIEhhc1B1YmxpY0tleS5cbiAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnb2JqZWN0JyAmJiAncHVibGljS2V5JyBpbiBpbnB1dCkge1xuICAgICAgcmV0dXJuIGlucHV0LnB1YmxpY0tleTtcbiAgICB9XG4gICAgLy8gTGVnYWN5V2ViM0pzUHVibGljS2V5LlxuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdvYmplY3QnICYmICd0b0Jhc2U1OCcgaW4gaW5wdXQpIHtcbiAgICAgIHJldHVybiBpbnB1dC50b0Jhc2U1OCgpO1xuICAgIH1cbiAgICAvLyBQZGEuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgICByZXR1cm4gaW5wdXRbMF07XG4gICAgfVxuICAgIC8vIFB1YmxpY0tleUJ5dGVzLlxuICAgIHJldHVybiBiYXNlNTguZGVzZXJpYWxpemUoaW5wdXQpWzBdO1xuICB9KSgpO1xuICBpZiAoYXNzZXJ0VmFsaWRQdWJsaWNLZXkpIHtcbiAgICBhc3NlcnRQdWJsaWNLZXkoa2V5KTtcbiAgfVxuICByZXR1cm4ga2V5O1xufVxuXG4vKipcbiAqIENyZWF0ZXMgdGhlIGRlZmF1bHQgcHVibGljIGtleSB3aGljaCBpcyBjb21wb3NlZCBvZiBhbGwgemVybyBieXRlcy5cbiAqIEBjYXRlZ29yeSBTaWduZXJzIGFuZCBQdWJsaWNLZXlzXG4gKi9cbmNvbnN0IGRlZmF1bHRQdWJsaWNLZXkgPSAoKSA9PiAnMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTEnO1xuXG4vKipcbiAqIFdoZXRoZXIgdGhlIGdpdmVuIHZhbHVlIGlzIGEgdmFsaWQgcHVibGljIGtleS5cbiAqIEBjYXRlZ29yeSBTaWduZXJzIGFuZCBQdWJsaWNLZXlzXG4gKi9cbmNvbnN0IGlzUHVibGljS2V5ID0gdmFsdWUgPT4ge1xuICB0cnkge1xuICAgIGFzc2VydFB1YmxpY0tleSh2YWx1ZSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG4vKipcbiAqIFdoZXRoZXIgdGhlIGdpdmVuIHZhbHVlIGlzIGEgdmFsaWQgcHJvZ3JhbS1kZXJpdmVkIGFkZHJlc3MuXG4gKiBAY2F0ZWdvcnkgU2lnbmVycyBhbmQgUHVibGljS2V5c1xuICovXG5jb25zdCBpc1BkYSA9IHZhbHVlID0+IEFycmF5LmlzQXJyYXkodmFsdWUpICYmIHZhbHVlLmxlbmd0aCA9PT0gMiAmJiB0eXBlb2YgdmFsdWVbMV0gPT09ICdudW1iZXInICYmIGlzUHVibGljS2V5KHZhbHVlWzBdKTtcblxuLyoqXG4gKiBFbnN1cmVzIHRoZSBnaXZlbiB2YWx1ZSBpcyBhIHZhbGlkIHB1YmxpYyBrZXkuXG4gKiBAY2F0ZWdvcnkgU2lnbmVycyBhbmQgUHVibGljS2V5c1xuICovXG5mdW5jdGlvbiBhc3NlcnRQdWJsaWNLZXkodmFsdWUpIHtcbiAgLy8gQ2hlY2sgdmFsdWUgdHlwZS5cbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgSW52YWxpZFB1YmxpY0tleUVycm9yKHZhbHVlLCAnUHVibGljIGtleXMgbXVzdCBiZSBzdHJpbmdzLicpO1xuICB9XG5cbiAgLy8gQ2hlY2sgYmFzZTU4IGVuY29kaW5nIGFuZCBieXRlIGxlbmd0aC5cbiAgcHVibGljS2V5Qnl0ZXModmFsdWUpO1xufVxuXG4vKipcbiAqIERlZHVwbGljYXRlcyB0aGUgZ2l2ZW4gYXJyYXkgb2YgcHVibGljIGtleXMuXG4gKiBAY2F0ZWdvcnkgU2lnbmVycyBhbmQgUHVibGljS2V5c1xuICovXG5jb25zdCB1bmlxdWVQdWJsaWNLZXlzID0gcHVibGljS2V5cyA9PiBbLi4ubmV3IFNldChwdWJsaWNLZXlzKV07XG5cbi8qKlxuICogQ29udmVydHMgdGhlIGdpdmVuIHB1YmxpYyBrZXkgdG8gYSBVaW50OEFycmF5LlxuICogVGhyb3dzIGFuIGVycm9yIGlmIHRoZSBwdWJsaWMga2V5IGlzIGFuIGludmFsaWQgYmFzZTU4IHN0cmluZy5cbiAqIEBjYXRlZ29yeSBTaWduZXJzIGFuZCBQdWJsaWNLZXlzXG4gKi9cbmNvbnN0IHB1YmxpY0tleUJ5dGVzID0gdmFsdWUgPT4ge1xuICAvLyBDaGVjayBzdHJpbmcgbGVuZ3RoIHRvIGF2b2lkIHVubmVjZXNzYXJ5IGJhc2U1OCBlbmNvZGluZy5cbiAgaWYgKHZhbHVlLmxlbmd0aCA8IDMyIHx8IHZhbHVlLmxlbmd0aCA+IDQ0KSB7XG4gICAgdGhyb3cgbmV3IEludmFsaWRQdWJsaWNLZXlFcnJvcih2YWx1ZSwgJ1B1YmxpYyBrZXlzIG11c3QgYmUgYmV0d2VlbiAzMiBhbmQgNDQgY2hhcmFjdGVycy4nKTtcbiAgfVxuXG4gIC8vIENoZWNrIGJhc2U1OCBlbmNvZGluZy5cbiAgbGV0IGJ5dGVzO1xuICB0cnkge1xuICAgIGJ5dGVzID0gYmFzZTU4LnNlcmlhbGl6ZSh2YWx1ZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgbmV3IEludmFsaWRQdWJsaWNLZXlFcnJvcih2YWx1ZSwgJ1B1YmxpYyBrZXlzIG11c3QgYmUgYmFzZTU4IGVuY29kZWQuJyk7XG4gIH1cblxuICAvLyBDaGVjayBieXRlIGxlbmd0aC5cbiAgaWYgKGJ5dGVzLmxlbmd0aCAhPT0gUFVCTElDX0tFWV9MRU5HVEgpIHtcbiAgICB0aHJvdyBuZXcgSW52YWxpZFB1YmxpY0tleUVycm9yKHZhbHVlLCBgUHVibGljIGtleXMgbXVzdCBiZSAke1BVQkxJQ19LRVlfTEVOR1RIfSBieXRlcy5gKTtcbiAgfVxuICByZXR1cm4gYnl0ZXM7XG59O1xuXG4vKipcbiAqIENvbnZlcnRzIHRoZSBnaXZlbiBwdWJsaWMga2V5IHRvIGEgYmFzZTU4IHN0cmluZy5cbiAqIEBjYXRlZ29yeSBTaWduZXJzIGFuZCBQdWJsaWNLZXlzXG4gKiBAZGVwcmVjYXRlZCBQdWJsaWMga2V5cyBhcmUgbm93IHJlcHJlc2VudGVkIGRpcmVjdGx5IGFzIGJhc2U1OCBzdHJpbmdzLlxuICovXG5jb25zdCBiYXNlNThQdWJsaWNLZXkgPSBrZXkgPT4gcHVibGljS2V5KGtleSk7XG5cbi8qKlxuICogV2hldGhlciB0aGUgZ2l2ZW4gcHVibGljIGtleXMgYXJlIHRoZSBzYW1lLlxuICogQGNhdGVnb3J5IFNpZ25lcnMgYW5kIFB1YmxpY0tleXNcbiAqIEBkZXByZWNhdGVkIFVzZSBgbGVmdCA9PT0gcmlnaHRgIGluc3RlYWQgbm93IHRoYXQgcHVibGljIGtleXMgYXJlIGJhc2U1OCBzdHJpbmdzLlxuICovXG5jb25zdCBzYW1lUHVibGljS2V5ID0gKGxlZnQsIHJpZ2h0KSA9PiBwdWJsaWNLZXkobGVmdCkgPT09IHB1YmxpY0tleShyaWdodCk7XG5cbmV4cG9ydCB7IFBVQkxJQ19LRVlfTEVOR1RILCBhc3NlcnRQdWJsaWNLZXksIGJhc2U1OFB1YmxpY0tleSwgZGVmYXVsdFB1YmxpY0tleSwgaXNQZGEsIGlzUHVibGljS2V5LCBwdWJsaWNLZXksIHB1YmxpY0tleUJ5dGVzLCBzYW1lUHVibGljS2V5LCB1bmlxdWVQdWJsaWNLZXlzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21tb24ubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/esm/common.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/esm/errors.mjs":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/esm/errors.mjs ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InvalidPublicKeyError: () => (/* binding */ InvalidPublicKeyError)\n/* harmony export */ });\n/** @category Errors */\nclass InvalidPublicKeyError extends Error {\n  name = 'InvalidPublicKeyError';\n  constructor(invalidPublicKey, reason) {\n    reason = reason ? `. ${reason}` : '';\n    super(`The provided public key is invalid: ${invalidPublicKey}${reason}`);\n    this.invalidPublicKey = invalidPublicKey;\n  }\n}\n\n\n//# sourceMappingURL=errors.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG1ldGFwbGV4LWZvdW5kYXRpb24rdW1pLXB1YmxpYy1rZXlzQDAuOC45L25vZGVfbW9kdWxlcy9AbWV0YXBsZXgtZm91bmRhdGlvbi91bWktcHVibGljLWtleXMvZGlzdC9lc20vZXJyb3JzLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsT0FBTztBQUNsQyxpREFBaUQsaUJBQWlCLEVBQUUsT0FBTztBQUMzRTtBQUNBO0FBQ0E7O0FBRWlDO0FBQ2pDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEhwXFxPbmVEcml2ZVxcRGVza3RvcFxcQnJva2llcy1taW50LXBhZ2UtbWFpblxcYmFtYm9vXFxub2RlX21vZHVsZXNcXC5wbnBtXFxAbWV0YXBsZXgtZm91bmRhdGlvbit1bWktcHVibGljLWtleXNAMC44LjlcXG5vZGVfbW9kdWxlc1xcQG1ldGFwbGV4LWZvdW5kYXRpb25cXHVtaS1wdWJsaWMta2V5c1xcZGlzdFxcZXNtXFxlcnJvcnMubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAY2F0ZWdvcnkgRXJyb3JzICovXG5jbGFzcyBJbnZhbGlkUHVibGljS2V5RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIG5hbWUgPSAnSW52YWxpZFB1YmxpY0tleUVycm9yJztcbiAgY29uc3RydWN0b3IoaW52YWxpZFB1YmxpY0tleSwgcmVhc29uKSB7XG4gICAgcmVhc29uID0gcmVhc29uID8gYC4gJHtyZWFzb259YCA6ICcnO1xuICAgIHN1cGVyKGBUaGUgcHJvdmlkZWQgcHVibGljIGtleSBpcyBpbnZhbGlkOiAke2ludmFsaWRQdWJsaWNLZXl9JHtyZWFzb259YCk7XG4gICAgdGhpcy5pbnZhbGlkUHVibGljS2V5ID0gaW52YWxpZFB1YmxpY0tleTtcbiAgfVxufVxuXG5leHBvcnQgeyBJbnZhbGlkUHVibGljS2V5RXJyb3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@metaplex-foundation+umi-public-keys@0.8.9/node_modules/@metaplex-foundation/umi-public-keys/dist/esm/errors.mjs\n");

/***/ })

};
;